[{"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\index.js":"1","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\App.js":"3","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Forms\\Form.js":"4","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Posts.js":"5","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Post\\Post.js":"6","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\Styles.js":"7","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Post\\Styles.js":"8","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Styles.js":"9","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Forms\\Styles.js":"10","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\index.js":"11","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\posts.js":"12","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\actions\\posts.js":"13","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\api\\index.js":"14","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\constants\\actionTypes.js":"15","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Navbar\\Navbar.js":"16","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Navbar\\Styles.js":"17","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Home\\Home.js":"18","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Auth.js":"19","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Input.js":"20","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Styles.js":"21","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\icon.js":"22","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\auth.js":"23","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\actions\\auth.js":"24"},{"size":744,"mtime":1612433556551,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1612765745073,"results":"27","hashOfConfig":"26"},{"size":582,"mtime":1612591906492,"results":"28","hashOfConfig":"26"},{"size":3208,"mtime":1612941081016,"results":"29","hashOfConfig":"26"},{"size":891,"mtime":1612939849075,"results":"30","hashOfConfig":"26"},{"size":3229,"mtime":1612930732527,"results":"31","hashOfConfig":"26"},{"size":483,"mtime":1612586812074,"results":"32","hashOfConfig":"26"},{"size":1013,"mtime":1612433990191,"results":"33","hashOfConfig":"26"},{"size":278,"mtime":1612345238862,"results":"34","hashOfConfig":"26"},{"size":447,"mtime":1612345198486,"results":"35","hashOfConfig":"26"},{"size":150,"mtime":1612774235969,"results":"36","hashOfConfig":"26"},{"size":586,"mtime":1612807533323,"results":"37","hashOfConfig":"26"},{"size":1286,"mtime":1612939802023,"results":"38","hashOfConfig":"26"},{"size":788,"mtime":1613116558854,"results":"39","hashOfConfig":"26"},{"size":226,"mtime":1612789281997,"results":"40","hashOfConfig":"26"},{"size":2053,"mtime":1612939897527,"results":"41","hashOfConfig":"26"},{"size":952,"mtime":1612766558023,"results":"42","hashOfConfig":"26"},{"size":1114,"mtime":1612592017387,"results":"43","hashOfConfig":"26"},{"size":4926,"mtime":1612949673181,"results":"44","hashOfConfig":"26"},{"size":1066,"mtime":1612772961232,"results":"45","hashOfConfig":"26"},{"size":666,"mtime":1612605453102,"results":"46","hashOfConfig":"26"},{"size":512,"mtime":1612768519602,"results":"47","hashOfConfig":"26"},{"size":544,"mtime":1612867006573,"results":"48","hashOfConfig":"26"},{"size":595,"mtime":1612940057640,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1e3du8r",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\index.js",[],["106","107"],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\App.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Forms\\Form.js",["108","109","110","111"],"import React,{ useState , useEffect } from 'react';\r\nimport useStyles from './Styles'; \r\nimport { TextField, Button ,Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch , useSelector } from 'react-redux';\r\nimport { createPost , updatePost } from '../../actions/posts';\r\n \r\n\r\nconst Form=({ currentId, setCurrentId})=>{\r\n\r\n\r\nconst [postData,setPostData]=useState({ title:'',message:'',tags:'',selectedFile:'' });\r\nconst [msg,setMsg]=useState(null);\r\nconst classes=useStyles(); \r\nconst dispatch=useDispatch();\r\nconst user=JSON.parse(localStorage.getItem('profile'));\r\n\r\n\r\nconst post=useSelector((state)=> currentId? state.posts.find((p)=>p._id===currentId):null)\r\n\r\n\r\nuseEffect(()=>{\r\n    if(post) setPostData(post);\r\n},[post]);\r\n\r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  \r\n\r\n  \r\n\r\n  if(postData.title=='' || postData.message==''|| postData.tags==''|| postData.selectedFile=='' )\r\n  {\r\n    setMsg('Fill all the fields');\r\n  }\r\n\r\n else if(currentId)\r\n {\r\n    setMsg(null);\r\n    dispatch(updatePost(currentId,{...postData,name:user?.result?.name}));\r\n }\r\n  else\r\n  {\r\n    setMsg(null);\r\n\r\n    dispatch(createPost({...postData , name:user?.result?.name}))\r\n  }\r\n  clear();\r\n \r\n}\r\nconst clear=()=>{\r\n  setCurrentId(null);\r\n  setPostData({title:'',message:'',tags:'',selectedFile:'' })\r\n}\r\n\r\nif(!user?.result.name){\r\n  return(\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        Please Sign in to create Your own memory ..\r\n      </Typography>\r\n    </Paper>\r\n  )\r\n}\r\n\r\n    return(\r\n        <Paper className={classes.paper}>\r\n           {msg==null?<div></div>:<div>Fill all the fields*</div>}\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n             <Typography variant=\"h6\">{currentId? 'Editing ' : 'Creating '} Food blog</Typography>\r\n              \r\n               <TextField  name=\"title\"  variant=\"outlined\"  label=\"Title *\" fullWidth value={postData.title} onChange={(e)=>setPostData({...postData ,title: e.target.value})}/>\r\n               <TextField  name=\"message\"  variant=\"outlined\" label=\"Message *\" fullWidth value={postData.message} onChange={(e)=>setPostData({...postData ,message: e.target.value})}/>\r\n               <TextField  name=\"tags\"  variant=\"outlined\"  label=\"Tag *\" placeholder=\"use , to seperate tags\" fullWidth value={postData.tags} onChange={(e)=>setPostData({...postData ,tags: e.target.value.split(',')})}/>\r\n                  <div className={classes.fileInput}>\r\n                      <FileBase \r\n                         type=\"file\"\r\n                         multiple={false}\r\n                         onDone={({base64})=>setPostData({ ...postData,selectedFile:base64 })}\r\n                      />\r\n                  </div>\r\n                  <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                  <br/>\r\n                  <Button  variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth> Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default Form;","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Posts.js",["112","113"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Post from'./Post/Post';\r\nimport useStyles from './Styles';\r\n\r\n\r\nconst Posts=({ setCurrentId })=>{\r\n\r\n     \r\n    const posts=useSelector((state)=>state.posts);\r\n  \r\nconst classes=useStyles();  \r\n\r\n\r\n    return(\r\n       <div>\r\n        <h1 >Posts</h1>\r\n        {!posts.length? <CircularProgress />:(\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                      {posts.map(post=>(\r\n                          <Grid key={post._id} item xs={12} sm={6}>\r\n                              <Post post={post} setCurrentId={setCurrentId}/>\r\n                          </Grid>\r\n                      ))}\r\n            </Grid>\r\n        )}\r\n       </div>\r\n    )\r\n};\r\n\r\nexport default Posts;","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Post\\Post.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\Styles.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Post\\Styles.js",[],["114","115"],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Posts\\Styles.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Forms\\Styles.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\index.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\posts.js",["116"],"import { FETCH_ALL, UPDATE ,CREATE ,DELETE , LIKE } from '../constants/actionTypes';\r\nexport default (posts=[],action)=>{\r\n   \r\n    switch(action.type){\r\n        case DELETE:\r\n            return posts.filter((post)=>post._id!== action.payload);\r\n\r\n        case UPDATE:\r\n        case LIKE:\r\n            return posts.map((post)=>post._id===action.payload._id ? action.payload: post);\r\n\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n\r\n        case CREATE:\r\n            return [ ...posts, action.payload];\r\n            \r\n        default:\r\n            return posts;\r\n    }\r\n}","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\actions\\posts.js",["117"],"import { FETCH_ALL, UPDATE ,CREATE ,DELETE , LIKE } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n//Action Creator\r\n\r\nexport const getPosts=()=> async (dispatch)=> {\r\n\r\n    try {\r\n        const {data}=await api.fetchPost();\r\n    dispatch({ type: FETCH_ALL ,payload:data})\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n   \r\n};\r\nexport const createPost =(post)=> async (dispatch)=>{\r\n    try {\r\n        const {data}=await api.createPost(post);\r\n       \r\n\r\n        dispatch({type:CREATE, payload:data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const updatePost=(id,post)=>async (dispatch)=>{\r\n    try {\r\n        const {data}=await api.updatePost(id,post);\r\n        dispatch({ type:UPDATE, payload:data})  \r\n    } catch (error) {\r\n        console.log(error);\r\n    } \r\n}\r\nexport const deletePost=(id)=>async (dispatch)=>{\r\n    try {\r\n        const response =await api.deletePost(id);\r\n        dispatch({ type:DELETE, payload: id})  \r\n    } catch (error) {\r\n        console.log(error);\r\n    } \r\n}\r\nexport const likePost=(id)=>async (dispatch)=>{\r\n    try {\r\n        const { data }=await api.likePost(id);\r\n      \r\n        dispatch({ type:LIKE, payload: data})  \r\n    } catch (error) {\r\n        console.log(error);\r\n    } \r\n}","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\api\\index.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Navbar\\Navbar.js",["118"],"import React, { useState , useEffect} from 'react';\r\nimport { Link, useHistory , useLocation } from 'react-router-dom'\r\nimport { AppBar , Avatar, Toolbar, Typography , Button } from '@material-ui/core';\r\n\r\nimport decode from 'jwt-decode';\r\nimport useStyles  from './Styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LOGOUT } from '../../constants/actionTypes';\r\n\r\nconst Navbar=()=>{\r\n    const classes=useStyles();\r\n    const [user,setUser]=useState(JSON.parse(localStorage.getItem('profile')));\r\n    \r\n    const history=useHistory();\r\n    const location=useLocation();\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n    const logout=()=>{\r\n       dispatch({ type:LOGOUT});\r\n       history.push('/');\r\n       setUser(null);\r\n      \r\n    }\r\n\r\n    useEffect(()=>{\r\n        const token=user?.token;\r\n        if(token){\r\n            const decodedToken=decode(token);\r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    },[location])\r\n\r\n    return(\r\n<AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n    <div className={classes.brandContainer}>\r\n    <Typography  component={Link} to=\"/\" className={classes.heading} variant=\"h4\" align=\"center\">Food-Blogs </Typography>\r\n    </div>\r\n    \r\n       <Toolbar className={classes.toolbar}>\r\n            {user?(\r\n                <div className={classes.profile}>\r\n                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt[0]}</Avatar>\r\n                    <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\r\n                    <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>LogOut</Button>\r\n                </div>\r\n            ):(\r\n                <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\"  >Sign In</Button>\r\n            )}\r\n        </Toolbar> \r\n      </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Navbar\\Styles.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Auth.js",["119"],"import React,{ useEffect, useState } from 'react';\r\nimport { Avatar ,Button, Paper , Grid , Typography , Container } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport {useDispatch} from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Icon from './icon'\r\nimport useStyles from './Styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Input from './Input';\r\nimport { signin , signup } from '../../actions/auth';\r\nimport { AUTH  } from '../../constants/actionTypes';\r\n\r\nconst initialState={ firstName:'' , lastname:'' , email:'' , password:'' , confirmPassword:''}\r\n\r\nconst Auth=()=>{\r\n\r\n    const classes=useStyles();\r\n    const [ShowPassword , setShowPassword]=useState(false);\r\n\r\n    const [isSignup ,setisSignup]=useState(false);\r\n    const [formData , setFormData]=useState(initialState);\r\n    const dispatch=useDispatch();\r\n\r\n    const history=useHistory();\r\n\r\n    const handleShowPassword=()=> setShowPassword((prev) => !prev);\r\n\r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault();\r\n        if(isSignup)\r\n        {\r\n           dispatch(signup(formData, history));\r\n        }\r\n        else\r\n        {\r\n            dispatch(signin(formData, history))\r\n            \r\n        }\r\n    };\r\n    const handleChange=(e)=>{\r\n         setFormData({ ...formData, [e.target.name]:e.target.value})\r\n    };\r\n    const switchMode=()=>{\r\n\r\n     \r\n      \r\n      setisSignup(prev=>!prev)\r\n       setShowPassword(false);\r\n    };\r\n   \r\n    const googleSuccess= async (res)=>{\r\n          const result=res?.profileObj;\r\n          const token=res?.tokenId;\r\n\r\n          try{    \r\n                dispatch({type: AUTH , data:{ result , token}});\r\n                history.push('/');\r\n          }catch(e)\r\n          {\r\n              console.log(e);\r\n          }\r\n    };\r\n    const googleFailure=(e)=>{\r\n        console.log(e);\r\n          console.log('Google sign in unsucessfull, Try again')\r\n    };\r\n    \r\n\r\n    return(\r\n        <div>\r\n           <Container component=\"main\" maxWidth=\"xs\">\r\n               <Paper className={classes.paper} elevation={3}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography variant=\"h5\">{isSignup? 'Sign Up':'Sign In'}</Typography>\r\n                  <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {\r\n                                 isSignup && (\r\n                                    <>\r\n                                   \r\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half/>\r\n                                    </>\r\n                                )}\r\n                                <Input name=\"email\" label=\"Email Adress\" handleChange={handleChange} type=\"email\" />\r\n                                <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={ ShowPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                                {isSignup && <Input  name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\r\n                        </Grid>\r\n                        \r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n                            {isSignup ? 'Sign Up' : 'Sign in'}\r\n                        </Button>\r\n                        <GoogleLogin \r\n                          clientId=\"834017074981-io62ccor4qmlh6i7rudn5jmbtm2ps1ah.apps.googleusercontent.com\"\r\n                          render={(renderProps)=>(\r\n                              <Button className={classes.googleButton} color='primary' fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\r\n                                  Google Sign In\r\n                              </Button>\r\n                          )}\r\n\r\n                          onSuccess={googleSuccess}\r\n                          onFailure={googleFailure}\r\n                          cookiePolicy=\"single_host_origin\"\r\n                        />\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button onClick={switchMode}>\r\n                                  { isSignup ? 'Already have an acc ? Sign In' : \"Don't have an account ? Sign Up\"}\r\n\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                  </form>\r\n               </Paper>\r\n           </Container>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Auth;","C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\Styles.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\components\\Auth\\icon.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Akshit trivedi\\Desktop\\food -blog\\client\\src\\actions\\auth.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":32,"column":20,"nodeType":"126","messageId":"127","endLine":32,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":32,"column":44,"nodeType":"126","messageId":"127","endLine":32,"endColumn":46},{"ruleId":"124","severity":1,"message":"125","line":32,"column":64,"nodeType":"126","messageId":"127","endLine":32,"endColumn":66},{"ruleId":"124","severity":1,"message":"125","line":32,"column":92,"nodeType":"126","messageId":"127","endLine":32,"endColumn":94},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":1,"column":28,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":1,"nodeType":"137","endLine":21,"endColumn":2},{"ruleId":"128","severity":1,"message":"138","line":37,"column":15,"nodeType":"130","messageId":"131","endLine":37,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":33,"column":7,"nodeType":"141","endLine":33,"endColumn":17,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["143"],["144"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"148","text":"149"},[1032,1042],"[location, logout, user?.token]"]